name: Build with Docker

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      MIX_ENV: prod

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Build
        run: docker build -t home_hub .

      - name: Create container
        run: echo "id=$(docker create home_hub)" >> $GITHUB_OUTPUT
        id: container

      - name: Get release version string
        run: echo "version=$(_build/prod/rel/home_hub/bin/home_hub version | cut -d " " -f 2)" >> $GITHUB_OUTPUT
        id: version

      - name: Assemble package
        run: |
          docker cp ${{ steps.container.outputs.id }}:/app/_build/prod/rel/home_hub home_hub
          cp -R ./logs home_hub/

      - name: Create gzip
        run: tar -czf home_hub_${{ steps.version.outputs.version }}_arm64.gz home_hub

      # For diagnostics
      - name: Show artifacts
        run: ls -la home_hub

      - name: Create release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: true
          release_name: Home Hub ${{ steps.version.outputs.version }} Alpha
          tag_name: v${{ steps.version.outputs.version }}
          body: |
            Autogenerated by github action, developer should edit as required before publishing...
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add bins to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./home_hub_${{ steps.version.outputs.version }}_arm64.gz
          asset_name: home_hub_${{ steps.version.outputs.version }}_arm64.gz
          asset_content_type: application/gzip
